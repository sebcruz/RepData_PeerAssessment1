install.packages("readr")
install.packages("readr")
act_raw = read.csv("activity.csv", header = TRUE)
setwd("~/GitHub/RepData_PeerAssessment1")
act_raw = read.csv("activity.csv", header = TRUE)
act_clean = act_raw[complete.cases(act_raw), ]
act_full = act_raw
act_clean_avgByInterval = aggregate(steps ~ interval, data=act_clean, FUN= mean)
View(act_clean_avgByInterval)
View(act_full)
for (i in 1:nrow(act_raw)) {
if (is.na(act_full$steps[i])) {
act_full$steps[i] = act_clean_avgByInterval[which(act_full$interval[i] == act_clean_avgByInterval$interval), ]$steps
}
}
View(act_full)
act_full = merge(act_raw, act_clean_avgByInterval, by="interval", all.x=TRUE)
View(act_full)
act_full = act_raw
for (i in 1:nrow(act_raw)) {
if (is.na(act_full$steps[i])) {
act_full$steps[i] = act_clean_avgByInterval[which(act_full$interval[i] == act_clean_avgByInterval$interval), ]$steps
}
}
testdata = merge(act_raw, act_clean_avgByInterval, by="interval", all.x=TRUE)
View(act_full)
View(testdata)
testdata$modSteps = ifelse(is.na(testdata$steps.x), testdata$steps.y, testdata$steps.x)
testdata[c(1, 3, 5), ]
testdata[, c(1, 3, 5) ]
act_full_sumByDate = aggregate(modSteps ~ date, data=act_full, FUN=sum)
act_full = merge(act_raw, act_clean_avgByInterval, by="interval", all.x=TRUE)
# Create new column modSteps that uses avg steps for those intervals that are NA
act_full$modSteps = ifelse(is.na(act_full$steps.x), act_full$steps.y, act_full$steps.x)
act_full_sumByDate = aggregate(modSteps ~ date, data=act_full, FUN=sum)
# Histogram of Step Sum by Date
qplot(act_full_sumByDate$modSteps,
geom = "histogram",
fill = I("grey"),
col = I("white"),
main = "Histogram of Daily modSteps",
xlab = "Daily modSteps",
ylab = "Frequency"
)
library(ggplot2)
act_full_sumByDate = aggregate(modSteps ~ date, data=act_full, FUN=sum)
# Histogram of Step Sum by Date
qplot(act_full_sumByDate$modSteps,
geom = "histogram",
fill = I("grey"),
col = I("white"),
main = "Histogram of Daily modSteps",
xlab = "Daily modSteps",
ylab = "Frequency"
)
act_clean_sumByDate = aggregate(steps ~ date, data=act_clean, FUN=sum)
# Histogram of Step Sum by Date
qplot(act_clean_sumByDate$steps,
geom = "histogram",
fill = I("grey"),
col = I("white"),
main = "Histogram of Daily Steps",
xlab = "Daily Steps",
ylab = "Frequency"
)
mean(act_clean$steps) - mean(act_full$modSteps)
# Medians Compared
median(act_clean$steps) - median(act_full$modSteps)
testdata = merge(act_raw, act_clean_avgByInterval, by="interval", all.x=TRUE)
testdata$modSteps = ifelse(is.na(testdata$steps.x), testdata$steps.y, testdata$steps.x)
testdata$DayType = ifelse(weekdays(as.Date(testdata$date)) %in% c("Saturday", "Sunday"), "Weekend", "Weekday")
act_full$DayType = ifelse(weekdays(as.Date(act_full$date)) %in% c("Saturday", "Sunday"), "Weekend", "Weekday")
act_full$DayType = factor(ifelse(weekdays(as.Date(act_full$date)) %in% c("Saturday", "Sunday"), "Weekend", "Weekday"))
qplot(interval, steps, data=act_clean_avgByInterval,
geom="line",
main="Average Steps by Interval")
ggplot(data=act_clean_avgByInterval, aes(x=interval, y=steps)) +
geom_line()
ggplot(data=act_clean_avgByInterval, aes(x=interval, y=steps)) +
geom_line() +
facet_grid(. ~ DayType)
act_full_avgByInterval = aggregate(steps ~ interval, data=act_full, FUN= mean)
act_full_avgByInterval = aggregate(modSteps ~ interval, data=act_full, FUN= mean)
ggplot(data=act_full_avgByInterval, aes(x=interval, y=modSteps)) +
geom_line() +
facet_grid(. ~ DayType)
wdplot = ggplot(data=act_full_avgByInterval, aes(x=interval, y=modSteps)) +
geom_line()
wdplot + facet_grid(. ~ DayType)
ggplot(data=act_full_avgByInterval, aes(x=interval, y=modSteps)) +
geom_line()
ggplot(data=act_full_avgByInterval, aes(x=interval, y=modSteps, group=DayType)) +
geom_line() +
facet_grid(. ~ DayType)
wplot = ggplot(data=act_full_avgByInterval, aes(x=interval, y=modSteps, group=DayType)) + geom_line()
wplot +  facet_grid(. ~ DayType)
wplot = ggplot(data=act_full_avgByInterval, aes(x=interval, y=modSteps)) + geom_line()
wplot +  facet_grid(. ~ DayType)
act_full_avgByIntervalByDayType = aggregate(modSteps ~ interval, data=act_full, subset=DayType == type,  FUN= mean)
act_full_avgByIntervalByDayType = aggregate(modSteps ~ interval, data=act_full, subset=DayType,  FUN= mean)
ggplot(data=act_full_avgByInterval, aes(x=interval, y=modSteps)) +
geom_line() +
facet_grid(. ~ DayType)
View(act_full_avgByIntervalByDayType)
View(act_full_avgByIntervalByDayType)
View(act_full_avgByInterval)
View(act_full)
act_full_avgByIntervalByDayType = aggregate(modSteps ~ interval, data=act_full, subset=act_full$DayType == type, FUN= mean)
act_full_avgByIntervalByDayType = aggregate(modSteps ~ interval, data=act_full, subset=act_full$DayType, FUN=mean)
View(act_full_avgByIntervalByDayType)
View(act_full_avgByInterval)
act_full_avgByIntervalByDayType = aggregate(modSteps ~ interval + DayType, data=act_full, FUN=mean)
View(act_full_avgByIntervalByDayType)
ggplot(data=act_full_avgByInterval, aes(x=interval, y=modSteps)) +
geom_line() +
facet_grid(. ~ DayType)
ggplot(data=act_full_avgByIntervalByDayType, aes(x=interval, y=modSteps)) +
geom_line() +
facet_grid(. ~ DayType)
ggplot(data=act_full_avgByIntervalByDayType, aes(x=interval, y=modSteps)) +
geom_line() +
facet_grid(DayType.~)
ggplot(data=act_full_avgByIntervalByDayType, aes(x=interval, y=modSteps)) +
geom_line() +
facet_grid(DayType~.)
ggplot(data=act_full_avgByIntervalByDayType, aes(x=interval, y=modSteps)) +
geom_line() +
facet_grid(DayType~.) +
ggtitle("Average modSteps by Interval by DayType") +
ylab("modSteps (NAs replaced with Interval Means)")
qplot(act_clean_sumByDate$steps,
geom = "histogram",
fill = I("grey"),
col = I("white"),
main = "Histogram of Total Daily Steps",
xlab = "Daily Steps",
ylab = "Frequency"
)
qplot(interval, steps, data=act_clean_avgByInterval,
geom="line",
main="Average Steps by Interval")
qplot(act_full_sumByDate$modSteps,
geom = "histogram",
fill = I("grey"),
col = I("white"),
main = "Histogram of Total Daily modSteps",
xlab = "Daily modSteps (NAs replaced with Interval Means)",
ylab = "Frequency"
)
ggplot(data=act_full_avgByIntervalByDayType, aes(x=interval, y=modSteps)) +
geom_line() +
facet_grid(DayType~.) +
ggtitle("Average modSteps by Interval by DayType") +
ylab("modSteps (NAs replaced with Interval Means)")
png("hist.png")
qplot(act_clean_sumByDate$steps,
geom = "histogram",
fill = I("grey"),
col = I("white"),
main = "Histogram of Total Daily Steps",
xlab = "Daily Steps",
ylab = "Frequency"
)
dev.off()
png("avgStepsByInterval.png")
qplot(interval, steps, data=act_clean_avgByInterval,
geom="line",
main="Average Steps by Interval")
dev.off()
png("modHist.png")
qplot(act_full_sumByDate$modSteps,
geom = "histogram",
fill = I("grey"),
col = I("white"),
main = "Histogram of Total Daily modSteps",
xlab = "Daily modSteps (NAs replaced with Interval Means)",
ylab = "Frequency"
)
dev.off()
png("panel.png")
ggplot(data=act_full_avgByIntervalByDayType, aes(x=interval, y=modSteps)) +
geom_line() +
facet_grid(DayType~.) +
ggtitle("Average modSteps by Interval by DayType") +
ylab("modSteps (NAs replaced with Interval Means)")
dev.off()
setwd("~/GitHub/RepData_PeerAssessment1")
png("hist.png")
qplot(act_clean_sumByDate$steps,
geom = "histogram",
fill = I("grey"),
col = I("white"),
main = "Histogram of Total Daily Steps",
xlab = "Daily Steps",
ylab = "Frequency"
)
dev.off()
png("avgStepsByInterval.png")
qplot(interval, steps, data=act_clean_avgByInterval,
geom="line",
main="Average Steps by Interval")
dev.off()
png("modHist.png")
qplot(act_full_sumByDate$modSteps,
geom = "histogram",
fill = I("grey"),
col = I("white"),
main = "Histogram of Total Daily modSteps",
xlab = "Daily modSteps (NAs replaced with Interval Means)",
ylab = "Frequency"
)
dev.off()
png("panel.png")
ggplot(data=act_full_avgByIntervalByDayType, aes(x=interval, y=modSteps)) +
geom_line() +
facet_grid(DayType~.) +
ggtitle("Average modSteps by Interval by DayType") +
ylab("modSteps (NAs replaced with Interval Means)")
dev.off()
knit2html(input = "PA1_template.Rmd",  output = "PA1_template.md")
knitr::knit2html(input = "PA1_template.Rmd",  output = "PA1_template.md")
